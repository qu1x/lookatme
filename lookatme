#! /bin/sh
#
# Look at me and tell me my IPv4 and IPv6 address, see `lookatme --help'.

# Copyright (c) 2017 Rouven Spreckels <n3vu0r@qu1x.org>
#
# Usage of the works is permitted provided that
# this instrument is retained with the works, so that
# any entity that uses the works is notified of this instrument.
#
# DISCLAIMER: THE WORKS ARE WITHOUT WARRANTY.

over=${LOOKATME_OVER:-"http"}
from=${LOOKATME_FROM:-"ipvx.qu1x.net"}
dude=${LOOKATME_DUDE:-}
here=${LOOKATME_HERE:-}
fast=${LOOKATME_FAST:-"2"}

look() {
	curl ${dude:+--cacert "$dude"} ${here:+--interface "$here"} -m "$fast" \
		-sf$1 "$over://$from" | grep '^\[*[0-9a-fA-F.:]\+]*$'
}

help="\
Look at me and tell me my IPv6 and IPv4 address.

lookatme [OPTION]
  ... via IPv6 and IPv4 in parallel while printing IPv6 before IPv4. Parallized
  only if /dev/shm and mktemp are available. Errors are silently ignored.
  Scripts may cover all four possible cases with:

  ipvx=\$(lookatme) # Either IPv6\\\\nIPv4\\\\n, IPv6\\\\n, IPv4\\\\n, or empty.
  ipv6=\$(echo \"\$ipvx\" | grep -F :) # IPv6 or empty.
  ipv4=\$(echo \"\$ipvx\" | grep -F .) # IPv4 or empty.

  Security? ... make sure that:

  LOOKATME_OVER=https
  LOOKATME_FROM=<trustful-host>
  LOOKATME_DUDE=<trustful-ca-cert>

OPTIONs:
  -6, --ipv6     ... via IPv6 only.
  -4, --ipv4     ... via IPv4 only.

  -h, --help     Print help.
  -v, --version  Print version.

Environment variables:
  LOOKATME_OVER  ${over:-"<PROTOCOL>"}
  LOOKATME_FROM  ${from:-"<HOST>"}
  LOOKATME_DUDE  ${dude:-"[CA_CERT]"}
  LOOKATME_HERE  ${here:-"[INTERFACE]"}
  LOOKATME_FAST  ${fast:-"<TIMEOUT>"}"
info="\
v1.0.0 <https://qu1x.org/lookatme>"
hint="\
Invalid usage, see \`lookatme --help'."

[ $# -le 1 ] && what=$1 || what=*

case $what in
	"")
		temp="/dev/shm"
		if [ -d "$temp" ] && command -v mktemp 1> /dev/null
		then
			path=$(mktemp -d "$temp/lookatme.XXXXXXXXXX")
			ipv6="$path/ipv6"
			ipv4="$path/ipv4"
			trap 'rm -r "$path"' EXIT INT TERM HUP
			look 6 > "$ipv6" & pid6=$!
			look 4 > "$ipv4" & pid4=$!
			wait $pid6; ret6=$?
			wait $pid4; ret4=$?
			cat "$ipv6" "$ipv4"
		else
			look 6; ret6=$?
			look 4; ret4=$?
		fi ;;
	-6|--ipv6)
		look 6; ret6=$? ;;
	-4|--ipv4)
		look 4; ret4=$? ;;
	-h|--help)
		echo "$help" ;;
	-v|--version)
		echo "$info" ;;
	*)
		echo "$hint" 1>&2; exit 1 ;;
esac
